name: mycroft
summary: Your AI personal assistant!
description: >
  Mycroft is a free and open-source intelligent personal assistant and knowledge
  navigator for Linux-based operating systems that uses a natural language user
  interface. It is the worldâ€™s first fully open-source AI voice assistant.

  Mycroft is named after a fictional computer from 1966 science fiction novel
  "The Moon Is a Harsh Mistress".

  Installing skills by voice seems to be broken for now, but you can use
  the `mycroft.msm` command to list, install, and remove skills.
adopt-info: mycroft
grade: stable
confinement: strict

parts:
  alsa:
    after: [alsa-lib, alsa-plugins]
    plugin: nil
    source: https://github.com/diddledan/snapcraft-alsa.git
    override-pull: |
      cat > alsa.conf <<EOF
      pcm.!default {
        type pulse
        fallback "sysdefault"
        hint {
          show on
          description "Default ALSA Output (currently PulseAudio Sound Server)"
        }
      }
      ctl.!default {
        type pulse
        fallback "sysdefault"
      }
      EOF
      cat > alsa-launch <<EOF
      #!/bin/bash
      if [ "\$SNAP_ARCH" == "amd64" ]; then
        ARCH="x86_64-linux-gnu"
      elif [ "\$SNAP_ARCH" == "armhf" ]; then
        ARCH="arm-linux-gnueabihf"
      elif [ "\$SNAP_ARCH" == "arm64" ]; then
        ARCH="aarch64-linux-gnu"
      else
        ARCH="\$SNAP_ARCH-linux-gnu"
      fi
      export LD_LIBRARY_PATH="\$SNAP/usr/lib/alsa-lib:\$SNAP/usr/lib/\$ARCH/pulseaudio:\$LD_LIBRARY_PATH"
      export ALSA_CONFIG_PATH="\$SNAP/etc/alsa.conf"
      # Make PulseAudio socket available inside the snap-specific $XDG_RUNTIME_DIR
      if [ -n "\$XDG_RUNTIME_DIR" ]; then
          pulsenative="pulse/native"
          pulseaudio_sockpath="\$XDG_RUNTIME_DIR/../\$pulsenative"
          if [ -S "\$pulseaudio_sockpath" ]; then
              export PULSE_SERVER="unix:\${pulseaudio_sockpath}"
          fi
      fi
      exec "\$@"
      EOF
    override-build: |
      snapcraftctl build
      install -m644 -D -t $SNAPCRAFT_PART_INSTALL/etc alsa.conf
      install -m755 -D -t $SNAPCRAFT_PART_INSTALL/bin alsa-launch
  alsa-lib:
    plugin: autotools
    source: https://mirrorservice.org/sites/ftp.alsa-project.org/pub/lib/alsa-lib-1.1.6.tar.bz2
    # configflags needed until LP#1766878 is fixed
    configflags:
    - --prefix=/usr
    - --sysconfdir=/etc
    - --libexec=/usr/lib
    - --libdir=/usr/lib
    - --localstatedir=/var
    - --with-configdir=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/share/alsa
    - --with-plugindir=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/lib/alsa-lib
    - --disable-alisp
    - --disable-aload
    - --disable-python
    - --disable-rawmidi
    - --disable-static
    - --disable-topology
    - --disable-ucm
    - --enable-symbolic-functions
    override-build: |
      snapcraftctl build
      for pcfile in $SNAPCRAFT_PART_INSTALL/usr/lib/pkgconfig/*.pc; do
        sed -i -E "s~^((include|lib)dir=)/usr(/local)?~\1\${prefix}~g" $pcfile || true
        sed -i -E "s~^((exec_)?prefix=)(/usr(/local)?)~\1/\3~" $pcfile || true
      done
    organize:
      snap/$SNAPCRAFT_PROJECT_NAME/current/usr/lib/*: usr/lib/
      snap/$SNAPCRAFT_PROJECT_NAME/current/usr/share/*: usr/share/
    prime:
    - usr/include
    - usr/lib
    - usr/share/alsa
  alsa-plugins:
    after: [alsa-lib]
    plugin: autotools
    source: https://mirrorservice.org/sites/ftp.alsa-project.org/pub/plugins/alsa-plugins-1.1.6.tar.bz2
    # configflags needed until LP#1766878 is fixed
    configflags:
    - --prefix=/usr
    - --sysconfdir=/etc
    - --libexec=/usr/lib
    - --libdir=/usr/lib
    - --localstatedir=/var
    - --disable-arcamav
    - --disable-avcodec
    - --disable-jack
    - --disable-mix
    - --disable-oss
    - --disable-usbstream
    - --with-plugindir=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/lib/alsa-lib
    - --disable-static
    - LDFLAGS=-L$SNAPCRAFT_STAGE/usr/lib
    organize:
      snap/$SNAPCRAFT_PROJECT_NAME/current/usr/lib/*: usr/lib/
      snap/$SNAPCRAFT_PROJECT_NAME/current/usr/share/*: usr/share/
    prime:
    - lib
    - usr/lib
    - usr/share/alsa
    build-packages:
    - libpulse-dev
    stage-packages:
    - libpulse0

  patches:
    source: patches
    plugin: dump
    prime: [msm-skillsdir.diff]

  scripts:
    source: scripts
    source-type: local
    plugin: dump
    organize:
      mycroft-launch: bin/mycroft-launch
    stage:
    - bin/mycroft-launch

  desktop:
    source: desktop
    plugin: dump
    organize:
      mycroft.desktop: usr/share/applications/mycroft.desktop
      mycroft.png: usr/share/icons/mycroft.png

  snapcraft-preload:
    # Until sergiusens/snapcraft-preload#29 is merged we will keep this local
    #source: https://github.com/sergiusens/snapcraft-preload.git
    source: snapcraft-preload
    source-type: local
    plugin: cmake
    build-packages:
    - gcc-multilib
    - g++-multilib

  mimic:
    after: [patches]
    plugin: autotools
    source: https://github.com/MycroftAI/mimic.git
    source-type: git
    source-depth: 1
    configflags:
    - --prefix=/usr
    - --disable-static
    - --with-audio=pulseaudio
    override-pull: |
      snapcraftctl pull
      patch -Np1 < $SNAPCRAFT_STAGE/mimic-pulseaudio.diff
    build-packages:
    - libpcre2-dev
    - libpulse-dev
    stage-packages:
    - libpcre2-8-0
    - libpulse0
    prime:
    - usr/bin
    - usr/include
    - usr/lib
    - -usr/lib/*.a
    - -usr/lib/*.la
    - -usr/lib/pkgconfig
    - usr/share/mimic

  portaudio:
    after: [alsa]
    source: http://www.portaudio.com/archives/pa_stable_v190600_20161030.tgz
    plugin: cmake
    configflags:
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DPA_USE_ALSA=ON
    - -DPA_USE_JACK=ON
    build-packages:
    - libjack-dev
    stage-packages:
    - libjack0
    prime:
    - usr/include
    - usr/lib

  mpg123:
    after: [alsa]
    source: http://sourceforge.mirrorservice.org/m/mp/mpg123/mpg123/1.25.10/mpg123-1.25.10.tar.bz2
    plugin: autotools
    configflags:
    - --prefix=/usr
    - --disable-static
    - --with-default-audio=pulse
    build-packages:
    - libpulse-dev
    stage-packages:
    - libpulse0
    prime:
    - usr/bin
    - usr/lib
    - -usr/lib/*.la

  vlc:
    after: [alsa, mpg123, portaudio]
    source: https://download.videolan.org/pub/videolan/vlc/3.0.3/vlc-3.0.3.tar.xz
    source-checksum: sha256/9ba8b04bdb13f7860a2041768ac83b47b397a36549c71c530b94028a3cfd5b51
    plugin: autotools
    override-build: |
      cd extras/tools
      ./bootstrap
      make -j$SNAPCRAFT_PARALLEL_BUILD_COUNT .protoc
      cd ../../
      export PATH=$PWD/extras/tools/build/bin:$PATH
      cd contrib && mkdir linux && cd linux
      ../bootstrap \
        --disable-a52 \
        --disable-chromaprint \
        --disable-dca \
        --disable-disc \
        --disable-ebml \
        --disable-fluid \
        --disable-fontconfig \
        --disable-freetype2 \
        --disable-gettext \
        --disable-glib \
        --disable-gnutls \
        --disable-gpg-error \
        --disable-jack \
        --disable-jpeg \
        --disable-libdsm \
        --disable-libxml2 \
        --disable-lua \
        --disable-matroska \
        --disable-mfx \
        --disable-modplug \
        --disable-mpcdec \
        --disable-mpg123 \
        --disable-mysofa \
        --disable-ncurses \
        --disable-png \
        --disable-qt \
        --disable-srt \
        --disable-tiff \
        --disable-tiger \
        --disable-tremor \
        --disable-upnp \
        --disable-vncclient \
        --disable-xcb \
        --disable-xcb-proto \
        --disable-xorg-macros \
        --disable-xproto \
        --disable-zlib \
        --disable-zvbi
      make -j$SNAPCRAFT_PARALLEL_BUILD_COUNT fetch
      make -j$SNAPCRAFT_PARALLEL_BUILD_COUNT
      make install
      cd ../../
      ./configure \
        --prefix=$SNAPCRAFT_PART_INSTALL/usr \
        --enable-merge-ffmpeg \
        --disable-a52
      make -j$SNAPCRAFT_PARALLEL_BUILD_COUNT
      make install
    build-packages:
    - ant
    - autoconf
    - automake
    - bison
    - build-essential
    - cmake
    - curl
    - flex
    - g++
    - gettext
    - git
    - libavahi-client-dev
    - libcdio-dev
    - libdbus-1-dev
    - libebml-dev
    - libfreetype6-dev
    - libfribidi-dev
    - libglib2.0-dev
    - libgnutls28-dev
    - libidn11-dev
    - libjack-dev
    - libjpeg8-dev
    - liblircclient-dev
    - liblua5.2-dev
    - libmatroska-dev
    - libmtp-dev
    - libncursesw5-dev
    - libnotify-dev
    - libpng-dev
    - libpulse-dev
    - librsvg2-dev
    - libsecret-1-dev
    - libtool
    - libtool-bin
    - libudev-dev
    - libupnp-dev
    - libv4l-dev
    - libxcb-composite0-dev
    - libxcb-randr0-dev
    - libxcb-shm0-dev
    - libxcb-xfixes0-dev
    - libxcb-xv0-dev
    - libxcb1-dev
    - libxml2-dev
    - lua5.2
    - make
    - pkg-config
    - ragel
    - xz-utils
    - yasm
    - zlib1g-dev
    stage-packages:
    - breeze-icon-theme
    - dbus-x11
    - fonts-freefont-ttf
    - frameworkintegration
    - libcdio13
    - libdbus-1-3
    - libebml4v5
    - libfreetype6
    - libfribidi0
    - libglib2.0-0
    - libgnutls30
    - libidn11
    - libjack0
    - libjpeg8
    - liblircclient0
    - liblua5.2-0
    - libmatroska6v5
    - libmtp9
    - libncursesw5
    - libnotify4
    - libpng12-0
    - libpulse0
    - librsvg2-2
    - libsecret-1-0
    - libupnp6
    - libv4l-0
    - libxcb-composite0
    - libxcb-randr0
    - libxcb-shm0
    - libxcb-xv0
    - libxcb1
    - libxml2
    - zlib1g

  mycroft-deps:
    plugin: nil
    override-stage: |
      snapcraftctl stage
      sed -i -E 's|(/usr/lib/x86_64-linux-gnu/libc_nonshared.a)|/snap/mycroft/current/\1|' \
        $SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libc.so
      sed -i -E 's|(/usr/lib/x86_64-linux-gnu/libmvec_nonshared.a)|/snap/mycroft/current/\1|' \
        $SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libm.so
      sed -i -E 's|(/usr/lib/x86_64-linux-gnu/libpthread_nonshared.a)|/snap/mycroft/current/\1|' \
        $SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libpthread.so
    stage-packages:
    - libgdk-pixbuf2.0-0 # yad
    - libgtk-3-0         # yad
    - libfreetype6       # yad
    - libfontconfig1     # yad
    - libnotify4         # yad
    - libnotify-bin
    - yad
    - binutils
    - bison
    - cmake
    - curl
    - flac
    - g++
    - gcc
    - git
    - jq
    - libc6-dev
    - libfann-dev
    - libffi-dev
    - libglib2.0-dev
    - libicu-dev
    - libjpeg-dev
    - libpcre2-dev
    - libssl-dev
    - locales-all
    - make
    - patch
    - pkg-config
    - pulseaudio-utils
    - python-gobject-2-dev
    - python-setuptools
    - python3-dev
    - rsync
    - swig
    - zlib1g

  mycroft:
    after: [mycroft-deps, snapcraft-preload, patches, mimic, portaudio, mpg123, vlc]
    source: https://github.com/MycroftAI/mycroft-core.git
    source-type: git
    source-depth: 1
    plugin: dump
    override-pull: |
      snapcraftctl pull
      git checkout $(git describe --tags --abbrev=0 --match release/v*)
      git describe --tags | sed -e 's|release/v||' > .version
      snapcraftctl set-version "$(cat .version)"
      patch -Np1 -i "$SNAPCRAFT_STAGE/mycroft-cache.diff"
    organize:
      '*': mycroft-source/
      '.*.yml': mycroft-source/
      .gitignore: mycroft-source/
      .gitmessage: mycroft-source/
      .version: mycroft-source/

  # mycroft-plasma:
  #   after: [desktop-qt5]
  #   source: https://anongit.kde.org/plasma-mycroft.git
  #   plugin: cmake
  #   configflags:
  #   - -DCMAKE_INSTALL_PREFIX=/usr
  #   - -DCMAKE_BUILD_TYPE=Release
  #   - -DKDE_INSTALL_LIBDIR=lib
  #   - -DKDE_INSTALL_USE_QT_SYS_PATHS=on
  #   override-build: |
  #     snapcraftctl build
  #     chmod +x usr/share/plasma/plasmoids/org.kde.plasma.mycroftplasmoid/contents/code/*service.sh


apps:
  mycroft:
    command: alsa-launch mycroft-launch start-all
    plugs:
    - desktop
    - desktop-legacy
    - mount-observe
    - network
    - network-bind
    - pulseaudio
    - x11
    - wayland

  msm:
    command: mycroft-launch msm
    plugs:
    - desktop
    - desktop-legacy
    - network
    - network-bind
    - pulseaudio
    - x11
    - wayland

  cli:
    command: mycroft-launch client.text
    plugs:
    - desktop
    - desktop-legacy
    - network
    - x11
    - wayland

  bus:
    command: mycroft-launch messagebus.service
    plugs:
    - desktop
    - desktop-legacy
    - network
    - network-bind
    - x11
    - wayland

  skills:
    command: mycroft-launch skills
    plugs:
    - desktop
    - desktop-legacy
    - mount-observe
    - network
    - x11
    - wayland

  audio:
    command: alsa-launch mycroft-launch audio
    plugs:
    - desktop
    - desktop-legacy
    - network
    - pulseaudio
    - x11
    - wayland

  voice:
    command: alsa-launch mycroft-launch client.speech
    plugs:
    - desktop
    - desktop-legacy
    - network
    - pulseaudio
    - x11
    - wayland
